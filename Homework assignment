How long did you spend on this assignment?
I dedicated around three hours to this task. The majority of the time was spent thoroughly comprehending the dynamic programming method related to the Longest Common Substring problem. The initial segment of my task consisted of examining the theory and instances to verify the construction of the DP table. Subsequently, I dedicated time to coding the solution in C++, evaluating the program with different input strings, and displaying the DP lookup table for better understanding. Ultimately, I resolved issues involving ties in substrings. In general, the endeavor included both theoretical understanding and hands-on coding.
Based on your effort, what letter grade would you say you earned?
In considering the amount of time to focus on the effort I put into this assignment, I could feel I deserve an A for the work. I carefully assessed the algorithm, developed the program in C++, and tested it with several examples to verify its accuracy. Furthermore, I exceeded the essential criteria by incorporating logic to manage ties when there are two longest common substrings. I think my determination and meticulous method showed complete dedication to understanding and implementing the algorithm. This demonstrates a top-tier commitment regarding coding skills and comprehension of the issue at hand.
Based on your solution, what letter grade would you say you earned?
I believe my solution merits an A. The code accurately applies the dynamic programming method, builds the DP lookup table, and identifies the longest common substring. It additionally displays both the table and the resulting substring(s), illustrating clarity and thoroughness. I evaluated the software using the provided examples such as “ABAB” and “BABA,” along with additional test scenarios, and it yielded accurate outcomes in every instance. The answer is effective and completely fulfills the project specifications. The extra management of ties enhances the overall quality of the outcome, meeting A-level work standards.
Provide a summary of what doesn't work in your solution, along with an explanation of how you attempted to solve the problem and where you feel you struggled ?
The program is mostly functional, but I initially struggled with two areas. First, when building the DP table, I made indexing errors where I accessed incorrect rows or columns. Debugging required adding print statements to carefully trace values. Second, handling ties for multiple longest substrings was a challenge. At first, my program only returned one substring, even when multiple solutions existed. To fix this, I used a set to store all maximum substrings without duplication. Overall, nothing is “broken” in the final version, but these challenges highlight where I struggled and learned through trial and error.
